(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{456:function(_,e,v){"use strict";v.r(e);var a=v(28),o=Object(a.a)({},(function(){var _=this,e=_.$createElement,v=_._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"_2021年05月11日"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2021年05月11日"}},[_._v("#")]),_._v(" 2021年05月11日")]),_._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[_._v("天气")]),_._v(" "),v("p",[_._v("今日杭州晴，天气温和。")])]),_._v(" "),v("h2",{attrs:{id:"webpack-打包原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包原理"}},[_._v("#")]),_._v(" webpack 打包原理")]),_._v(" "),v("p",[v("code",[_._v("webpack")]),_._v(" 是由 "),v("code",[_._v("nodejs")]),_._v(" 编写的前端资源加载 / 打包工具，由 "),v("code",[_._v("nodejs")]),_._v(" 提供了强大的文件处理，"),v("code",[_._v("IO")]),_._v(" 能力。")]),_._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#webpack-打包原理"}},[_._v("webpack 打包原理")]),v("ul",[v("li",[v("a",{attrs:{href:"#_1-webpack-的打包原理"}},[_._v("1 webpack 的打包原理")])]),v("li",[v("a",{attrs:{href:"#_2-loader"}},[_._v("2 loader")])]),v("li",[v("a",{attrs:{href:"#_3-plugin"}},[_._v("3 plugin")])]),v("li",[v("a",{attrs:{href:"#_4-loader-和-plugin-的区别"}},[_._v("4 loader 和 plugin 的区别")])])])])])]),v("p"),_._v(" "),v("h3",{attrs:{id:"_1-webpack-的打包原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack-的打包原理"}},[_._v("#")]),_._v(" 1 webpack 的打包原理")]),_._v(" "),v("ul",[v("li",[_._v("识别入口文件；")]),_._v(" "),v("li",[_._v("通过逐层识别模块依赖("),v("code",[_._v("Commonjs")]),_._v("、"),v("code",[_._v("amd")]),_._v(" 或者 "),v("code",[_._v("es6")]),_._v(" 的 "),v("code",[_._v("import")]),_._v("，"),v("code",[_._v("webpack")]),_._v(" 都会对其进行分析，来获取代码的依赖)；")]),_._v(" "),v("li",[v("code",[_._v("webpack")]),_._v(" 做的就是分析代码，转换代码，编译代码，输出代码；")]),_._v(" "),v("li",[_._v("最终形成打包后的代码。")])]),_._v(" "),v("h3",{attrs:{id:"_2-loader"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-loader"}},[_._v("#")]),_._v(" 2 loader")]),_._v(" "),v("p",[v("code",[_._v("loader")]),_._v(" 是文件加载器，能够加载资源文件，并对这些文件进行一些处理，诸如编译、压缩等，最终一起打包到指定的文件中。")]),_._v(" "),v("ul",[v("li",[_._v("处理一个文件可以使用多个 "),v("code",[_._v("loader")]),_._v("，"),v("code",[_._v("loader")]),_._v(" 的执行顺序和配置中的顺序是相反的，即最后一个 "),v("code",[_._v("loader")]),_._v(" 最先执行，第一个 "),v("code",[_._v("loader")]),_._v(" 最后执行。")]),_._v(" "),v("li",[_._v("第一个执行的 "),v("code",[_._v("loader")]),_._v(" 接收源文件内容作为参数，其它 "),v("code",[_._v("loader")]),_._v(" 接收前一个执行的 "),v("code",[_._v("loader")]),_._v(" 的返回值作为参数，最后执行的 "),v("code",[_._v("loader")]),_._v(" 会返回此模块的 "),v("code",[_._v("JavaScript")]),_._v(" 源码。")])]),_._v(" "),v("h3",{attrs:{id:"_3-plugin"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-plugin"}},[_._v("#")]),_._v(" 3 plugin")]),_._v(" "),v("p",[_._v("在 "),v("code",[_._v("webpack")]),_._v(" 运行的生命周期中会广播出许多事件，"),v("code",[_._v("plugin")]),_._v(" 可以监听这些事件，在合适的时机通过 "),v("code",[_._v("webpack")]),_._v(" 提供的 "),v("code",[_._v("API")]),_._v(" 改变输出结果。")]),_._v(" "),v("h3",{attrs:{id:"_4-loader-和-plugin-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-loader-和-plugin-的区别"}},[_._v("#")]),_._v(" 4 loader 和 plugin 的区别")]),_._v(" "),v("ul",[v("li",[v("p",[v("code",[_._v("loader")]),_._v("，它是一个转换器，将 "),v("code",[_._v("A")]),_._v(" 文件进行编译成 "),v("code",[_._v("B")]),_._v(" 文件，比如：将 "),v("code",[_._v("A.less")]),_._v(" 转换为 "),v("code",[_._v("A.css")]),_._v("，单纯的文件转换过程。")])]),_._v(" "),v("li",[v("p",[v("code",[_._v("plugin")]),_._v(" 是一个扩展器，它丰富了 "),v("code",[_._v("webpack")]),_._v(" 本身，针对是 "),v("code",[_._v("loader")]),_._v(" 结束后，"),v("code",[_._v("webpack")]),_._v(" 打包的整个过程，它并不直接操作文件，而是基于事件机制工作，会监听 "),v("code",[_._v("webpack")]),_._v(" 打包过程中的某些节点，执行广泛的任务。")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);
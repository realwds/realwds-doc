(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{466:function(t,e,o){"use strict";o.r(e);var i=o(28),v=Object(i.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"_2021年05月21日"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2021年05月21日"}},[t._v("#")]),t._v(" 2021年05月21日")]),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("天气")]),t._v(" "),o("p",[t._v("今日杭州晴，天气温和。")])]),t._v(" "),o("h2",{attrs:{id:"bfc-ifc-gfc-和-ffc"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#bfc-ifc-gfc-和-ffc"}},[t._v("#")]),t._v(" BFC，IFC，GFC 和 FFC")]),t._v(" "),o("p"),o("div",{staticClass:"table-of-contents"},[o("ul",[o("li",[o("a",{attrs:{href:"#bfc-ifc-gfc-和-ffc"}},[t._v("BFC，IFC，GFC 和 FFC")]),o("ul",[o("li",[o("a",{attrs:{href:"#bfc-block-formatting-contexts-块级格式上下文"}},[t._v("BFC（Block formatting contexts）块级格式上下文")])]),o("li",[o("a",{attrs:{href:"#ifc-inline-formatting-contexts-内联格式上下文"}},[t._v("IFC（Inline formatting contexts）内联格式上下文")])]),o("li",[o("a",{attrs:{href:"#gfc-gridelayout-formatting-contexts-网格布局格式化上下文"}},[t._v("GFC（GrideLayout formatting contexts）网格布局格式化上下文")])]),o("li",[o("a",{attrs:{href:"#ffc-flex-formatting-contexts-自适应格式上下文"}},[t._v("FFC（Flex formatting contexts）自适应格式上下文")])])])])])]),o("p"),t._v(" "),o("h3",{attrs:{id:"bfc-block-formatting-contexts-块级格式上下文"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#bfc-block-formatting-contexts-块级格式上下文"}},[t._v("#")]),t._v(" BFC（Block formatting contexts）块级格式上下文")]),t._v(" "),o("p",[t._v("页面上的一个隔离的渲染区域，那么他是如何产生的呢？")]),t._v(" "),o("p",[t._v("可以触发 BFC 的元素有 "),o("code",[t._v("float")]),t._v("、"),o("code",[t._v("position")]),t._v("、"),o("code",[t._v("overflow")]),t._v("、"),o("code",[t._v("display：table-cell/ inline-block/table-caption")]),t._v(" ；")]),t._v(" "),o("p",[t._v("BFC 有什么作用呢？比如说实现多栏布局")]),t._v(" "),o("h3",{attrs:{id:"ifc-inline-formatting-contexts-内联格式上下文"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ifc-inline-formatting-contexts-内联格式上下文"}},[t._v("#")]),t._v(" IFC（Inline formatting contexts）内联格式上下文")]),t._v(" "),o("p",[t._v("IFC 的 line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的"),o("code",[t._v("padding")]),t._v(" / "),o("code",[t._v("margin")]),t._v(" 影响)IFC 中的 line box 一般左右都贴紧整个 IFC，但是会因为 "),o("code",[t._v("float")]),t._v(" 元素而扰乱。")]),t._v(" "),o("p",[o("code",[t._v("float")]),t._v(" 元素会位于 IFC 与 line box 之间，使得 line box 宽度缩短。 同一个 IFC 下的多个 line box 高度会不同 IFC 中时不可能有块级元素的，当插入块级元素时（如 "),o("code",[t._v("p")]),t._v(" 中插入 "),o("code",[t._v("div")]),t._v(" ）会产生两个匿名块与 "),o("code",[t._v("div")]),t._v(" 分隔开，即产生两个 IFC，每个 IFC 对外表现为块级元素，与"),o("code",[t._v("div")]),t._v(" 垂直排列。")]),t._v(" "),o("p",[t._v("那么 IFC 一般有什么用呢？")]),t._v(" "),o("p",[t._v("水平居中：当一个块要在环境中水平居中时，设置其为 "),o("code",[t._v("inline-block")]),t._v(" 则会在外层产生 IFC，通过 "),o("code",[t._v("text-align")]),t._v(" 则可以使其水平居中。")]),t._v(" "),o("p",[t._v("垂直居中：创建一个 IFC，用其中一个元素撑开父元素的高度，然后设置其 "),o("code",[t._v("vertical-align:middle")]),t._v("，其他行内元素则可以在此父元素下垂直居中。")]),t._v(" "),o("h3",{attrs:{id:"gfc-gridelayout-formatting-contexts-网格布局格式化上下文"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#gfc-gridelayout-formatting-contexts-网格布局格式化上下文"}},[t._v("#")]),t._v(" GFC（GrideLayout formatting contexts）网格布局格式化上下文")]),t._v(" "),o("p",[t._v("当为一个元素设置 "),o("code",[t._v("display")]),t._v(" 值为 "),o("code",[t._v("grid")]),t._v(" 的时候，此元素将会获得一个独立的渲染区域，我们可以通过在网格容器（grid container）上定义网格定义行（grid definition rows）和网格定义列（grid definition columns）属性各在网格项目（grid item）上定义网格行（grid row）和网格列（grid columns）为每一个网格项目（grid item）定义位置和空间。")]),t._v(" "),o("p",[t._v("那么 GFC 有什么用呢，和 "),o("code",[t._v("table")]),t._v(" 又有什么区别呢？首先同样是一个二维的表格，但 GridLayout 会有更加丰富的属性来控制行列，控制对齐以及更为精细的渲染语义和控制。")]),t._v(" "),o("h3",{attrs:{id:"ffc-flex-formatting-contexts-自适应格式上下文"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ffc-flex-formatting-contexts-自适应格式上下文"}},[t._v("#")]),t._v(" FFC（Flex formatting contexts）自适应格式上下文")]),t._v(" "),o("p",[o("code",[t._v("display")]),t._v(" 值为 "),o("code",[t._v("flex")]),t._v(" 或者 "),o("code",[t._v("inline-flex")]),t._v(" 的元素将会生成自适应容器（flex container），可惜这个牛逼的属性只有谷歌和火狐支持。")]),t._v(" "),o("p",[t._v("Flex Box 由伸缩容器和伸缩项目组成。通过设置元素的 "),o("code",[t._v("display")]),t._v(" 属性为 "),o("code",[t._v("flex")]),t._v(" 或 "),o("code",[t._v("inline-flex")]),t._v(" 可以得到一个伸缩容器。")]),t._v(" "),o("p",[t._v("设置为 "),o("code",[t._v("flex")]),t._v(" 的容器被渲染为一个块级元素，而设置为 "),o("code",[t._v("inline-flex")]),t._v(" 的容器则渲染为一个行内元素。")]),t._v(" "),o("p",[t._v("伸缩容器中的每一个子元素都是一个伸缩项目。伸缩项目可以是任意数量的。伸缩容器外和伸缩项目内的一切元素都不受影响。")]),t._v(" "),o("p",[t._v("简单地说，"),o("code",[t._v("Flexbox")]),t._v(" 定义了伸缩容器内伸缩项目该如何布局。")])])}),[],!1,null,null,null);e.default=v.exports}}]);